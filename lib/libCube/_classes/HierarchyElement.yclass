interface LibCube:HierarchyElement extends LibCube:Member
    field correlation
        --> domains libCube:_constLists:correlation
        --> documentation "The correlation of the Hierarchy Element (i.e. positive/negative is good/bad)"
        --> xmlMapping XmlMappingProperty_SAVE
        --> dsl -> Textualization
            --> language LANG_en
            --> root "correlation"
            --> number SINGULAR
        ;
    field parent
        --> domains LibCube:HierarchyElement
        --> documentation "The parent of the hierarchy element.  Is calculated by the library."
        --> xmlMapping XmlMappingProperty_SAVE
        --> dsl -> Textualization
            --> language LANG_en
            --> root "parent"
            --> number SINGULAR
        ;
	field isLeaf
        --> domains Boolean
        --> xmlMapping XmlMappingProperty_SAVE
        --> dsl -> Textualization
            --> language LANG_en
            --> root "parent"
            --> number SINGULAR
        ;        	
    field grandparent
        --> domains LibCube:HierarchyElement
        --> xmlMapping XmlMappingProperty_SAVE
        --> dsl -> Textualization
            --> language LANG_en
            --> root "grandparent"
            --> number SINGULAR
        ;

    method getAllParents()
        --> domains List
        --> dsl -> Textualization
            --> language LANG_en
            --> root "get all parents"
            --> number PLURAL
        ;

    method getParentByLevel(Number level)
        --> domains LibCube:HierarchyElement
        --> dsl -> Textualization
            --> language LANG_en
            --> root "get parent by level"
            --> number PLURAL
        ;

    classProperties
    --> dsl -> Textualization
        --> language LANG_en
        --> root "Hierarchy Element"
        --> number SINGULAR
    ;
    --> trackInstances true
    --> dynamicInstances  true 	
;

implementation LibCube:HierarchyElement
;

function LibCube:HierarchyElement::getAllParents()
--> local List parents,
          LibCube:HierarchyElement theParent
--> action {
    theParent = this.parent;
    parents = new(List);
    
    while(theParent != null){
        parents.add(theParent);
        theParent = theParent.parent;
    }
    return parents;
}
;

function LibCube:HierarchyElement::getParentByLevel(Number level)
--> action {
    if(getAllParents().size() < level){
        logWarning("There is no current parent with level: " , level)
        return null;
    }
    else{
        return getAllParents().get(level);
    }
}
;